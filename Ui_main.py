# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\GitHub\WebCam-application-using-pyqt5-and-opencv\main.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QLabel, QFrame, QLineEdit, QMenu, QCheckBox
from joystick import Joystick
import pathlib
current_directory = str(pathlib.Path(__file__).parent.absolute())
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1250, 700)
        self.container = QtWidgets.QWidget(MainWindow)
        self.container.setObjectName("container")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.container)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        
        menuBar = self.menuBar()
        # Creating menus using a QMenu object
        self.systemMenu = QMenu("System", self)
        menuBar.addMenu(self.systemMenu)
        # Creating menus using a title
        self.fileMenu = menuBar.addMenu("File")
        self.cameraMenu = menuBar.addMenu("Camera")
        self.dMDMenu = menuBar.addMenu("DMD")
        self.stageMenu = menuBar.addMenu("XY Stage")
        self.helpMenu = menuBar.addMenu("Help")

        self.command_action = self.stageMenu.addAction(QtGui.QIcon(current_directory + '/media/command.png'), 'Send command')
        self.command_action = self.systemMenu.addAction(QtGui.QIcon(current_directory + '/media/hardware.png'), 'Hardware Configuration')
        self.command_action = self.systemMenu.addAction(QtGui.QIcon(current_directory + '/media/quit.png'), 'Quit')
        self.command_action = self.helpMenu.addAction(QtGui.QIcon(current_directory + '/media/about.png'), 'About')

        self.mainBox = QtWidgets.QVBoxLayout()
        self.mainBox.setObjectName("mainBox")
        self.topBox = QtWidgets.QHBoxLayout()
        self.topBox.setContentsMargins(-1, 0, 0, -1)
        self.topBox.setObjectName("topBox")
        
        self.camBtn_open = QtWidgets.QPushButton(self.container)
        self.camBtn_open.setEnabled(True)
        self.camBtn_open.setMinimumSize(QtCore.QSize(60, 40))
        self.camBtn_open.setMaximumSize(QtCore.QSize(60, 40))
        font = QtGui.QFont("Arial", 10, QtGui.QFont.Black)

        font.setBold(True)
        font.setWeight(63)
        self.camBtn_open.setFont(font)
        self.camBtn_open.setIconSize(QtCore.QSize(20, 20))
        self.camBtn_open.setCheckable(False)
        self.camBtn_open.setObjectName("camBtn_open")
        self.topBox.addWidget(self.camBtn_open)

        self.camBtn_record = QtWidgets.QPushButton(self.container)
        self.camBtn_record.setEnabled(True)
        self.camBtn_record.setMinimumSize(QtCore.QSize(60, 40))
        self.camBtn_record.setMaximumSize(QtCore.QSize(60, 40))
        self.camBtn_record.setFont(font)
        self.camBtn_record.setObjectName("camBtn_record")
        self.topBox.addWidget(self.camBtn_record)

        self.camBtn_capture = QtWidgets.QPushButton(self.container)
        self.camBtn_capture.setEnabled(True)
        self.camBtn_capture.setMinimumSize(QtCore.QSize(60, 40))
        self.camBtn_capture.setMaximumSize(QtCore.QSize(60, 40))
        self.camBtn_capture.setFont(font)
        self.camBtn_capture.setObjectName("camBtn_capture")
        self.topBox.addWidget(self.camBtn_capture)

        self.camBtn_stop = QtWidgets.QPushButton(self.container)
        self.camBtn_stop.setEnabled(True)
        self.camBtn_stop.setMinimumSize(QtCore.QSize(60, 40))
        self.camBtn_stop.setMaximumSize(QtCore.QSize(60, 40))
        self.camBtn_stop.setFont(font)
        self.camBtn_stop.setObjectName("camBtn_stop")
        self.topBox.addWidget(self.camBtn_stop)
        #self.topBox.addPermanentWidget(VLine())

        self.topBox.addSpacing(20)
        
        self.Btn_w = QtWidgets.QPushButton(self.container)
        self.Btn_w.setEnabled(True)
        self.Btn_w.setCheckable(True)
        self.Btn_w.setMinimumSize(QtCore.QSize(60, 40))
        self.Btn_w.setMaximumSize(QtCore.QSize(60, 40))
        self.Btn_w.setFont(font)
        self.Btn_w.setObjectName("DmdBtn_toggle")
        self.topBox.addWidget(self.Btn_w)

        self.topBox.addSpacing(20)

        self.Btn_ma_ctl = QtWidgets.QPushButton(self.container)
        self.Btn_ma_ctl.setEnabled(True)
        self.Btn_ma_ctl.setCheckable(True)
        self.Btn_ma_ctl.setMinimumSize(QtCore.QSize(60, 40))
        self.Btn_ma_ctl.setMaximumSize(QtCore.QSize(60, 40))
        self.Btn_ma_ctl.setFont(font)
        self.Btn_ma_ctl.setObjectName("Btn_ma_ctl")
        self.topBox.addWidget(self.Btn_ma_ctl)

        self.Btn_detectandpredict = QtWidgets.QPushButton(self.container)
        self.Btn_detectandpredict.setEnabled(True)
        self.Btn_detectandpredict.setMinimumSize(QtCore.QSize(120, 40))
        self.Btn_detectandpredict.setMaximumSize(QtCore.QSize(120, 40))
        self.Btn_detectandpredict.setFont(font)
        self.Btn_detectandpredict.setObjectName("Btn_detect_circle")
        self.topBox.addWidget(self.Btn_detectandpredict)

        self.Btn_endtracking = QtWidgets.QPushButton(self.container)
        self.Btn_endtracking.setEnabled(False)
        self.Btn_endtracking.setMinimumSize(QtCore.QSize(60, 40))
        self.Btn_endtracking.setMaximumSize(QtCore.QSize(60, 40))
        self.Btn_endtracking.setFont(font)
        self.Btn_endtracking.setObjectName("Btn_endtracking")
        self.topBox.addWidget(self.Btn_endtracking)

        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.topBox.addItem(spacerItem)
        
        self.mainBox.addLayout(self.topBox)
        self.midBox = QtWidgets.QHBoxLayout()
        self.midBox.setObjectName("midBox")
        self.view = QtWidgets.QScrollArea(self.container)
        self.view.setMinimumSize(QtCore.QSize(1044, 562))
        self.view.setMaximumSize(QtCore.QSize(1044, 562))
        self.view.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.view.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.view.setWidgetResizable(True)
        self.view.setObjectName("view")
        self.viewForm = QtWidgets.QWidget()
        self.viewForm.setGeometry(QtCore.QRect(0, 0, 1027, 545))
        self.viewForm.setObjectName("viewForm")
        self.viewData = QtWidgets.QLabel(self.viewForm)
        self.viewData.setGeometry(QtCore.QRect(0, 0, 1024, 542))
        self.viewData.setMinimumSize(QtCore.QSize(1024, 542))
        self.viewData.setMaximumSize(QtCore.QSize(1024, 542))
        self.viewData.setText("")
        self.viewData.setObjectName("viewData")
        self.view.setWidget(self.viewForm)
        self.midBox.addWidget(self.view, alignment=QtCore.Qt.AlignLeft)
        
        self.midrightBox = QtWidgets.QVBoxLayout()
        self.midrightBox.setObjectName("midrightBox")
        self.midrightBox0 = QtWidgets.QHBoxLayout()
        self.midrightBox0.setObjectName("midrightBox0")
        self.joyBtn_sethome = QtWidgets.QPushButton('Set Home', self)
        self.joyBtn_sethome.setCheckable(True)
        self.midrightBox0.addWidget(self.joyBtn_sethome)
        
        self.joyBtn_gohome = QtWidgets.QPushButton('Go Home', self)
        self.midrightBox0.addWidget(self.joyBtn_gohome)
        self.midrightBox1 = QtWidgets.QHBoxLayout()
        self.midrightBox1.setObjectName("midrightBox1")
        self.midrightBox2 = QtWidgets.QHBoxLayout()
        self.midrightBox2.setObjectName("midrightBox2")
        
        self.joyBtn_slow = QtWidgets.QPushButton('Slow', self)
        self.joyBtn_slow.setEnabled(False)
        self.joyBtn_slow.setStyleSheet('''color: black;background-color: Gray;''')
        self.midrightBox1.addWidget(self.joyBtn_slow)
        self.joyBtn_fast = QtWidgets.QPushButton('Fast', self)

        self.midrightBox1.addWidget(self.joyBtn_fast)

        self.midrightBox3 = QtWidgets.QHBoxLayout()
        self.midrightBox3.setObjectName("midrightBox3")

        self.textx=QLineEdit()
        self.midrightBox3.addWidget(self.textx)
        self.texty=QLineEdit()
        self.midrightBox3.addWidget(self.texty)
        
        self.midrightBox4 = QtWidgets.QHBoxLayout()
        self.midrightBox4.setObjectName("midrightBox4")

        self.joyBtn_goto = QtWidgets.QPushButton('Go to [x,y]', self)
        self.midrightBox4.addWidget(self.joyBtn_goto)
        self.joyBtn_go = QtWidgets.QPushButton('Go [\u0394x,\u0394y]', self)
        self.midrightBox4.addWidget(self.joyBtn_go)
        self.midrightBox5 = QtWidgets.QHBoxLayout()
        self.midrightBox5.setObjectName("midrightBox5")
        self.midrightBox51 = QtWidgets.QHBoxLayout()
        self.midrightBox51.setObjectName("midrightBox51")
        self.lbl_global_xy = QLabel()
        self.lbl_global_xy.setStyleSheet('border: 0; color:  black;')
        self.lbl_global_xy.setText(" Window (Global) [x,y]")
        self.midrightBox51.addWidget(self.lbl_global_xy, alignment=QtCore.Qt.AlignBottom)
        self.joy_LCDx = QLineEdit()
        self.joy_LCDx.setEnabled(False)
        self.joy_LCDx.setStyleSheet('color: black;')
        self.midrightBox5.addWidget(self.joy_LCDx)
        self.joy_LCDy = QLineEdit()
        self.joy_LCDy.setEnabled(False)
        self.joy_LCDy.setStyleSheet('color: black;')
        self.midrightBox5.addWidget(self.joy_LCDy)
        self.midrightBox6 = QtWidgets.QVBoxLayout()
        self.midrightBox6.setObjectName("midrightBox6")
        self.lbl_m_global_xy = QLabel()
        self.lbl_m_global_xy.setStyleSheet('border: 0; color:  black;')
        self.lbl_m_global_xy.setText(" Mouse (Global) [0,0]")
        self.lbl_m_local_xy = QLabel()
        self.lbl_m_local_xy.setStyleSheet('border: 0; color:  black;')
        self.lbl_m_local_xy.setText(" Mouse (Local):")
        self.lbl_cirlce_num = QLabel()
        self.lbl_cirlce_num.setStyleSheet('border: 0; color:  black;')
        self.lbl_cirlce_num.setText(" Droplet Detected:")
        self.chk_show_circle = QtWidgets.QCheckBox()
        self.joy_LCDy.setEnabled(False)
        self.chk_show_circle.setStyleSheet('border: 0; color:  black;')
        self.chk_show_circle.setText("show circle")
        self.midrightBox6.addWidget(self.lbl_m_global_xy)
        self.midrightBox6.addWidget(self.lbl_m_local_xy)
        self.midrightBox6.addWidget(self.lbl_cirlce_num)
        self.midrightBox6.addWidget(self.chk_show_circle)

        self.midrightBox.addStretch(1)
        self.midrightBox.addLayout(self.midrightBox0)
        self.midrightBox.addLayout(self.midrightBox1)
        self.midrightBox.addLayout(self.midrightBox2)
        self.midrightBox.addLayout(self.midrightBox3)
        self.midrightBox.addLayout(self.midrightBox4)
        self.midrightBox.addLayout(self.midrightBox51)
        self.midrightBox.addLayout(self.midrightBox5)
        self.midrightBox.addLayout(self.midrightBox6)
        self.midrightBox.addStretch(1)
        self.midBox.addLayout(self.midrightBox)
        self.mainBox.addLayout(self.midBox)

        self.bottomBox = QtWidgets.QHBoxLayout()
        self.bottomBox.setObjectName("bottomBox")
        self.viewCbo_roi = QtWidgets.QComboBox(self.container)
        self.viewCbo_roi.setMinimumSize(QtCore.QSize(80, 26))
        self.viewCbo_roi.setMaximumSize(QtCore.QSize(80, 26))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(9)
        font.setBold(True)
        font.setWeight(75)
        self.viewCbo_roi.setFont(font)
        self.viewCbo_roi.setMaxVisibleItems(10)
        self.viewCbo_roi.setObjectName("viewCbo_roi")
        self.viewCbo_roi.addItem("")
        self.viewCbo_roi.addItem("")
        self.viewCbo_roi.addItem("")
        self.viewCbo_roi.addItem("")
        self.viewCbo_roi.addItem("")
        self.bottomBox.addWidget(self.viewCbo_roi)

        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.bottomBox.addItem(spacerItem1)
        self.mainBox.addLayout(self.bottomBox)
        self.horizontalLayout_2.addLayout(self.mainBox)
        MainWindow.setCentralWidget(self.container)

        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        self.lbl1 = QLabel()
        self.lbl1.setStyleSheet('border: 0; color:  black;')
        self.lbl2 = QLabel()
        self.lbl2.setStyleSheet('border: 0; color:  black;')
        self.lbl3 = QLabel()
        self.lbl3.setStyleSheet('border: 0; color:  black;')
        self.statusBar.addPermanentWidget(VLine())    # <---
        self.statusBar.addPermanentWidget(self.lbl1)
        self.statusBar.addPermanentWidget(VLine())    # <---
        self.statusBar.addPermanentWidget(self.lbl2)
        self.statusBar.addPermanentWidget(VLine())    # <---
        self.statusBar.addPermanentWidget(self.lbl3)
        
        MainWindow.setStatusBar(self.statusBar)

        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")

        self.retranslateUi(MainWindow)
        self.viewCbo_roi.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Basler_Main_window"))
        self.camBtn_open.setText(_translate("MainWindow", "Preview"))
        self.camBtn_record.setText(_translate("MainWindow", "Record"))
        self.camBtn_stop.setText(_translate("MainWindow", "Stop"))
        self.camBtn_capture.setText(_translate("MainWindow", "Capture"))
        self.Btn_w.setText(_translate("MainWindow", "DMD"))
        self.Btn_ma_ctl.setText(_translate("MainWindow", "Manual"))
        self.Btn_detectandpredict.setText(_translate("MainWindow", "Detect + Predict"))
        self.Btn_endtracking.setText(_translate("MainWindow", "End"))
        self.viewCbo_roi.setItemText(0, _translate("MainWindow", "0.125"))
        self.viewCbo_roi.setItemText(1, _translate("MainWindow", "0.25"))
        self.viewCbo_roi.setItemText(2, _translate("MainWindow", "0.5"))
        self.viewCbo_roi.setItemText(3, _translate("MainWindow", "0.75"))
        self.viewCbo_roi.setItemText(4, _translate("MainWindow", "1.00"))
        self.lbl1.setText("Droplet Position")
        self.lbl2.setText("Droplet Selected: 0")
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionSave.setText(_translate("MainWindow", "Save"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As"))

class VLine(QFrame):
    # a simple VLine, like the one you get from designer
    def __init__(self):
        super(VLine, self).__init__()
        self.setFrameShape(self.VLine|self.Sunken)
